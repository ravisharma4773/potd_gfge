//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

class Array {
  public:
    template <class T>
    static void input(vector<T> &A, int n) {
        for (int i = 0; i < n; i++) {
            scanf("%d ", &A[i]);
        }
    }

    template <class T>
    static void print(vector<T> &A) {
        for (int i = 0; i < A.size(); i++) {
            cout << A[i] << " ";
        }
        cout << endl;
    }
};


// } Driver Code Ends

class Solution {
  public:
   vector<int> isprime(int n){
        vector<int>v;
        bool prime[n + 1];
        memset(prime, true, sizeof(prime));
        for (int p = 2; p * p <= n; p++) {
            if (prime[p] == true){
                for (int i = p * p; i <= n; i += p)
                    prime[i] = false;
            }
        }
        for (int p = 2; p <= n; p++) if(prime[p]) v.push_back(p);
       return v;
       
   }
    vector<int> getPrimes(int n) {
        // code here
        vector<int>ans;
        vector<int>st;
        st=isprime(n);
        int i=0;
        int j=st.size()-1;
        int target=n;
        while(i<=j){
            if(st[i]+st[j]==target){
                ans.push_back(st[i]);
                ans.push_back(st[j]);
                return ans;
            }
            else if(st[i]+st[j]<target){
                i++;
            }
            else{
                j--;
            }
        }
        return {-1,-1};
        }
};
